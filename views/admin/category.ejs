<%- include("../../views/partials/admin/header") %>
<head>
  <style>
    .col-md-3 {
      padding: 20px;
      border: 1px solid #ddd;
      border-radius: 10px;
      margin: 10px;
    }

    .form-label {
      margin-bottom: 8px;
    }

    .form-control {
      width: 100%;
      padding: 8px;
      margin-bottom: 10px;
      border: 1px solid #ccc;
      border-radius: 5px;
      box-sizing: border-box;
    }

    .d-grid {
      margin-top: 20px;
    }

    .btn-primary {
      background-color: #007bff;
      color: #fff;
      border: 1px solid #007bff;
      border-radius: 5px;
      padding: 10px 20px;
      cursor: pointer;
    }

    .btn-primary:hover {
      background-color: #0056b3;
      border-color: #0056b3;
    }

    .pagination-container {
      text-align: center;
    }

    .pagination {
      display: inline-block;
    }

    .pagination a,
    .pagination .current-page {
      display: inline-block;
      padding: 5px 10px;
      margin: 0 2px;
      border: 1px solid #ddd;
      text-decoration: none;
      color: #333;
    }

    .pagination a:hover {
      background-color: #f5f5f5;
    }

    .error-message {
      color: red;
      display: none;
    }

    /* Toast Styles */
    .toast-container {
      position: fixed;
      top: 20px;
      right: 20px;
      z-index: 1055;
    }

    .toast {
      background: rgba(255, 245, 230, 0.95); /* Creamy off-white */
      border: 1px solid #e8d7b0;
      border-radius: 8px;
      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
      min-width: 300px;
    }

    .toast-success {
      background: rgba(46, 204, 113, 0.95); /* Soft green for success */
      color: #ffffff;
    }

    .toast-error {
      background: rgba(231, 76, 60, 0.95); /* Soft red for errors */
      color: #ffffff;
    }

    .toast-confirm, .toast-input {
      background: rgba(255, 245, 230, 0.95); /* Creamy off-white for confirmation/input */
      color: #4a2c0b;
    }

    .toast-header {
      background: transparent;
      border-bottom: none;
      color: #4a2c0b; /* Rich brown */
      font-family: 'Lato', sans-serif;
      font-weight: 500;
    }

    .toast-success .toast-header,
    .toast-error .toast-header {
      color: #ffffff;
    }

    .toast-body {
      color: #4a2c0b;
      font-family: 'Lato', sans-serif;
    }

    .toast-success .toast-body,
    .toast-error .toast-body {
      color: #ffffff;
    }

    .toast-confirm .toast-body,
    .toast-input .toast-body {
      display: flex;
      flex-direction: column;
      gap: 10px;
    }

    .toast-confirm .btn,
    .toast-input .btn {
      padding: 8px 12px;
      border-radius: 5px;
      font-size: 0.9em;
    }

    .toast-confirm .btn-confirm,
    .toast-input .btn-confirm {
      background-color: #d33;
      color: #ffffff;
    }

    .toast-confirm .btn-cancel,
    .toast-input .btn-cancel {
      background-color: #3085d6;
      color: #ffffff;
    }

    .toast-input .form-control {
      margin-bottom: 0;
      border: 1px solid #e8d7b0;
    }

    .toast-input .input-error {
      border-color: red !important;
    }

    .toast-input .error-message {
      color: red;
      font-size: 0.9em;
      display: block;
    }

    /* Responsive Design */
    @media (max-width: 576px) {
      .toast-container {
        top: 10px;
        right: 10px;
        width: calc(100% - 20px);
      }
    }
  </style>
</head>
<body>
  <section class="content-main">
    <div class="content-header">
      <div>
        <h2 class="content-title card-title">Category</h2>
      </div>
    </div>
    <header class="card-header text-center mb-20">
      <form action="/admin/category/" method="get" class="d-inline">
        <div
          class="input-group input-group-sm border border-1 border-grey rounded-pill"
          style="width: 500px; margin-left: 230px"
        >
          <input
            type="text"
            class="form-control border-0 rounded-pill mt-3"
            placeholder="Search categories"
            name="search"
          />
          <button class="btn" type="submit">Search</button>
        </div>
      </form>
    </header>
    <!-- Toast Container -->
    <div class="toast-container"></div>
    <div class="card">
      <div class="card-body">
        <div class="row">
          <div class="col-md-3">
            <form
              method="post"
              action="/admin/addCategory"
              onsubmit="return handleFormsubmit(event)"
            >
              <div class="mb-4">
                <label for="product_name" class="form-label">Name</label>
                <input
                  type="text"
                  name="name"
                  placeholder="Type here"
                  class="form-control"
                  id="product_name"
                  required
                />
                <div id="name-error" class="error-message"></div>
              </div>
              <div class="mb-4">
                <label class="form-label">Description</label>
                <textarea
                  placeholder="Type here"
                  name="description"
                  class="form-control"
                  id="descriptionId"
                  required
                ></textarea>
                <div id="description-error" class="error-message"></div>
              </div>
              <div class="d-grid">
                <button class="btn btn-primary" type="submit">
                  Create category
                </button>
              </div>
            </form>
          </div>
          <div class="col-md-8 ml-10">
            <div class="table-responsive">
              <table class="table table-hover">
                <thead>
                  <tr>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Offer Price</th>
                    <th>Offer</th>
                    <th>Status</th>
                    <th>List/Unlist</th>
                    <th class="text-start">Edit</th>
                  </tr>
                </thead>
                <tbody>
                  <%cat.reverse().forEach((category,index)=>{%>
                  <tr>
                    <td class="text-start"><%=category.name%></td>
                    <td class="text-start"><%=category.description%></td>
                    <td>
                      <%if(category.categoryOffer){%>
                      <%=category.categoryOffer%> <%}else{%> 0% <%}%>
                    </td>
                    <td class="text-start">
                      <%if(category.categoryOffer===0){%>
                      <button class="btn btn-info" style="width: 100px">
                        <a
                          href="#"
                          class="text-white"
                          onclick="showOfferInputToast('<%=category._id%>')"
                          >Add Offer</a
                        >
                      </button>
                      <%}else{%>
                      <button class="btn btn-info" style="width: 100px">
                        <a
                          href="#"
                          class="text-white"
                          onclick="showRemoveOfferConfirmToast('<%=category._id%>')"
                          >Remove</a
                        >
                      </button>
                      <%}%>
                    </td>
                    <td class="text-start">
                      <%if(category.isListed){%>
                      <span
                        class="badge rounded-pill alert-success"
                        style="width: 60px"
                        >Listed</span
                      >
                      <%}else{%>
                      <span
                        class="badge rounded-pill alert-danger"
                        style="width: 60px"
                        >Unlisted</span
                      >
                      <%}%>
                    </td>
                    <td class="text-start">
                      <%if(category.isListed){%>
                      <button
                        class="btn btn-danger"
                        style="width: 70px"
                        onclick="showConfirmToast('<%=category._id%>', false)"
                      >
                        Unlist
                      </button>
                      <%}else{%>
                      <button
                        class="btn btn-success"
                        style="width: 70px"
                        onclick="showConfirmToast('<%=category._id%>', true)"
                      >
                        List
                      </button>
                      <%}%>
                    </td>
                    <td class="text-start">
                      <a
                        href="/admin/editCategory?id=<%=category._id%>"
                        class="btn btn-info text-white"
                        >Edit</a
                      >
                    </td>
                  </tr>
                  <%})%>
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>

    <div class="pagination-container">
      <% if (currentPage > 1) { %>
      <a href="?page=<%= currentPage - 1 %>">« Previous</a>
      <% } %> <% for (let i = 1; i <= totalPages; i++) { %> <% if (i ===
      currentPage) { %>
      <span class="current-page"><%= i %></span>
      <% } else { %>
      <a href="?page=<%= i %>"><%= i %></a>
      <% } %> <% } %> <% if (currentPage < totalPages) { %>
      <a href="?page=<%= currentPage + 1 %>">Next »</a>
      <% } %>
    </div>
  </section>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    // Function to show toast notifications
    function showToast(message, type = 'error') {
      const toastContainer = document.querySelector('.toast-container');
      const toast = document.createElement('div');
      toast.classList.add('toast', `toast-${type}`);
      toast.setAttribute('role', 'alert');
      toast.setAttribute('aria-live', 'assertive');
      toast.setAttribute('aria-atomic', 'true');
      toast.setAttribute('data-bs-autohide', 'true');
      toast.setAttribute('data-bs-delay', '5000');

      toast.innerHTML = `
        <div class="toast-header">
          <strong class="me-auto">${type.charAt(0).toUpperCase() + type.slice(1)}</strong>
          <button type="button" class="btn-close ${type === 'success' || type === 'error' ? 'btn-close-white' : ''}" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body">
          ${message}
        </div>
      `;

      toastContainer.appendChild(toast);
      const bsToast = new bootstrap.Toast(toast);
      bsToast.show();
      toast.addEventListener('hidden.bs.toast', () => {
        toast.remove();
      });
    }

    // Function to show confirmation toast for list/unlist
    function showConfirmToast(categoryId, isListing) {
      const toastContainer = document.querySelector('.toast-container');
      const toast = document.createElement('div');
      toast.classList.add('toast', 'toast-confirm');
      toast.setAttribute('role', 'alert');
      toast.setAttribute('aria-live', 'assertive');
      toast.setAttribute('aria-atomic', 'true');
      toast.setAttribute('data-bs-autohide', 'false');

      const action = isListing ? 'list' : 'unlist';
      toast.innerHTML = `
        <div class="toast-header">
          <strong class="me-auto">Confirm ${action.charAt(0).toUpperCase() + action.slice(1)}</strong>
          <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body">
          <p>Are you sure you want to ${action} this category?</p>
          <div class="d-flex justify-content-end gap-2">
            <button class="btn btn-confirm" onclick="updateCategoryStatus('${categoryId}', ${isListing})">Confirm</button>
            <button class="btn btn-cancel" data-bs-dismiss="toast">Cancel</button>
          </div>
        </div>
      `;

      toastContainer.appendChild(toast);
      const bsToast = new bootstrap.Toast(toast);
      bsToast.show();
      toast.addEventListener('hidden.bs.toast', () => {
        toast.remove();
      });
    }

    // Function to show input toast for adding offer
    function showOfferInputToast(categoryId) {
      const toastContainer = document.querySelector('.toast-container');
      const toast = document.createElement('div');
      toast.classList.add('toast', 'toast-input');
      toast.setAttribute('role', 'alert');
      toast.setAttribute('aria-live', 'assertive');
      toast.setAttribute('aria-atomic', 'true');
      toast.setAttribute('data-bs-autohide', 'false');

      toast.innerHTML = `
        <div class="toast-header">
          <strong class="me-auto">Add Offer</strong>
          <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body">
          <p>Enter percentage (1–99)</p>
          <input type="number" class="form-control" id="offerPercentage" placeholder="%" min="1" max="99" step="1">
          <div id="offerError" class="error-message"></div>
          <div class="d-flex justify-content-end gap-2">
            <button class="btn btn-confirm" onclick="submitOffer('${categoryId}')">Add Offer</button>
            <button class="btn btn-cancel" data-bs-dismiss="toast">Cancel</button>
          </div>
        </div>
      `;

      toastContainer.appendChild(toast);
      const bsToast = new bootstrap.Toast(toast);
      bsToast.show();
      toast.addEventListener('hidden.bs.toast', () => {
        toast.remove();
      });
    }

    // Function to show confirmation toast for removing offer
    function showRemoveOfferConfirmToast(categoryId) {
      const toastContainer = document.querySelector('.toast-container');
      const toast = document.createElement('div');
      toast.classList.add('toast', 'toast-confirm');
      toast.setAttribute('role', 'alert');
      toast.setAttribute('aria-live', 'assertive');
      toast.setAttribute('aria-atomic', 'true');
      toast.setAttribute('data-bs-autohide', 'false');

      toast.innerHTML = `
        <div class="toast-header">
          <strong class="me-auto">Confirm Remove Offer</strong>
          <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body">
          <p>Are you sure you want to remove the offer?</p>
          <div class="d-flex justify-content-end gap-2">
            <button class="btn btn-confirm" onclick="removeOffer('${categoryId}')">Confirm</button>
            <button class="btn btn-cancel" data-bs-dismiss="toast">Cancel</button>
          </div>
        </div>
      `;

      toastContainer.appendChild(toast);
      const bsToast = new bootstrap.Toast(toast);
      bsToast.show();
      toast.addEventListener('hidden.bs.toast', () => {
        toast.remove();
      });
    }

    async function updateCategoryStatus(categoryId, isListing) {
      const url = isListing ? "/admin/unlistCategory" : "/admin/listCategory";
      try {
        const response = await fetch(url, {
          method: "PATCH",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ id: categoryId }),
        });

        if (response.ok) {
          showToast(`Category ${isListing ? 'listed' : 'unlisted'} successfully`, 'success');
          setTimeout(() => {
            location.reload();
          }, 2000); // Delay reload to show toast
        } else {
          const errorData = await response.json();
          showToast(errorData.message || 'Error processing request', 'error');
        }
      } catch (error) {
        console.error('Error updating category status:', error);
        showToast('Something went wrong. Please try again.', 'error');
      }
    }

    function handleFormsubmit(event) {
      event.preventDefault();
      if (!validateForm()) {
        return;
      }

      const name = document.getElementsByName("name")[0].value;
      const description = document.getElementById("descriptionId").value;

      fetch("/admin/addCategory", {
        method: "POST",
        headers: {
          "content-type": "application/json",
        },
        body: JSON.stringify({ name, description }),
      })
        .then((response) => {
          if (!response.ok) {
            return response.json().then((err) => {
              throw new Error(err.error);
            });
          }
          return response.json();
        })
        .then((data) => {
          showToast('Category added successfully', 'success');
          setTimeout(() => {
            location.reload();
          }, 2000);
        })
        .catch((error) => {
          console.log("ERROR MESSAGE", error);
          showToast(error.message || 'Error adding category', 'error');
        });
    }

    function validateForm() {
      clearErrorMessages();
      const name = document.getElementsByName("name")[0].value.trim();
      const description = document.getElementById("descriptionId").value.trim();
      let isValid = true;

      if (name === "") {
        showToast('Please enter a name', 'error');
        isValid = false;
      } else if (!/^[a-zA-Z\s]+$/.test(name)) {
        showToast('Category name should contain only alphabetic characters', 'error');
        isValid = false;
      }
      if (description === "") {
        showToast('Please enter a description', 'error');
        isValid = false;
      }
      return isValid;
    }

    function displayErrorMessage(elementId, message) {
      var errorElement = document.getElementById(elementId);
      errorElement.innerText = message;
      errorElement.style.display = "block";
    }

    function clearErrorMessages() {
      const errorElements = document.getElementsByClassName("error-message");
      Array.from(errorElements).forEach((element) => {
        element.innerText = "";
        element.style.display = "none";
      });
    }

    async function submitOffer(categoryId) {
      const percentageInput = document.getElementById('offerPercentage');
      const offerError = document.getElementById('offerError');
      const value = percentageInput.value;

      if (!value || value < 1 || value > 99) {
        percentageInput.classList.add('input-error');
        offerError.innerText = 'Please enter a valid percentage between 1 and 99';
        offerError.style.display = 'block';
        return;
      }

      percentageInput.classList.remove('input-error');
      offerError.style.display = 'none';

      try {
        const response = await fetch("/admin/addCategoryOffer", {
          method: "POST",
          headers: { "content-type": "application/json" },
          body: JSON.stringify({
            percentage: value,
            categoryId: categoryId,
          }),
        });

        const data = await response.json();
        if (response.ok && data.status === true) {
          showToast('Offer added successfully', 'success');
          setTimeout(() => {
            location.reload();
          }, 2000);
        } else {
          showToast(data.message || 'Adding offer failed', 'error');
        }
      } catch (error) {
        console.error("Error adding category offer:", error);
        showToast('An error occurred while adding the offer', 'error');
      }
    }

    async function removeOffer(categoryId) {
      try {
        const response = await fetch("/admin/removeCategoryOffer", {
          method: "DELETE",
          headers: { "content-type": "application/json" },
          body: JSON.stringify({ categoryId: categoryId }),
        });

        const data = await response.json();
        if (response.ok && data.status === true) {
          showToast('Offer removed successfully', 'success');
          setTimeout(() => {
            location.reload();
          }, 2000);
        } else {
          showToast(data.message || 'Removing offer failed', 'error');
        }
      } catch (error) {
        console.error("Error removing category offer:", error);
        showToast('An error occurred while removing the offer', 'error');
      }
    }
  </script>
  <%- include("../../views/partials/admin/footer") %>
</body>