<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Admin Login - Aura Candles</title>
    <link href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;600&family=Lato:wght@300;400;700&display=swap" rel="stylesheet" />
    <link rel="stylesheet" href="/css/bootstrap.min.css" />
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body, html {
            height: 100%;
            display: flex;
            justify-content: center;
            align-items: center;
            background: linear-gradient(rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6)), 
                        url('https://images.unsplash.com/photo-1600585154340-be6161a56a0c?auto=format&fit=crop&w=1920&q=80') no-repeat center/cover;
            font-family: 'Lato', sans-serif;
            overflow: hidden;
        }

        .login-container {
            width: 100%;
            max-width: 450px;
            padding: 2.5rem;
            background: rgba(255, 245, 230, 0.95); /* Creamy off-white for warmth */
            border-radius: 12px;
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.2), 0 0 20px rgba(255, 147, 41, 0.2); /* Subtle glow */
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            margin: 20px;
            position: relative;
        }

        .login-container:hover {
            transform: translateY(-5px);
            box-shadow: 0 12px 30px rgba(0, 0, 0, 0.25), 0 0 25px rgba(255, 147, 41, 0.3);
        }

        .text-center {
            color: #4a2c0b; /* Rich brown for elegance */
            font-family: 'Playfair Display', serif;
            font-weight: 600;
            margin-bottom: 2rem;
            font-size: 2.2rem;
            text-align: center;
            text-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

        label {
            color: #6b4e31; /* Warm taupe */
            font-weight: 500;
            margin-bottom: 0.5rem;
            display: block;
        }

        .form-control {
            background: #fff8e7; /* Soft cream */
            border: 1px solid #e8d7b0;
            border-radius: 8px;
            padding: 12px 15px;
            font-size: 1rem;
            transition: all 0.3s ease;
        }

        .form-control:focus {
            border-color: #ff9329; /* Candle glow orange */
            box-shadow: 0 0 8px rgba(255, 147, 41, 0.4);
            background: #ffffff;
        }

        .error-message {
            color: #e74c3c; /* Soft red for errors */
            font-size: 0.85rem;
            margin-top: 0.25rem;
            min-height: 1rem;
        }

        .btn-primary {
            background: #ff9329; /* Warm candlelight orange */
            border: none;
            padding: 12px;
            border-radius: 8px;
            font-weight: 600;
            width: 100%;
            color: #ffffff;
            transition: all 0.3s ease;
        }

        .btn-primary:hover {
            background: #e87b1e;
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(255, 147, 41, 0.5);
        }

        /* Toast Styles */
        .toast-container {
            position: absolute;
            top: 20px;
            right: 20px;
            z-index: 1055;
        }

        .toast {
            background: rgba(255, 245, 230, 0.95); /* Creamy off-white */
            border: 1px solid #e8d7b0;
            border-radius: 8px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
        }

        .toast-error {
            background: rgba(231, 76, 60, 0.95); /* Soft red for errors */
            color: #ffffff;
        }

        .toast-success {
            background: rgba(46, 204, 113, 0.95); /* Soft green for success */
            color: #ffffff;
        }

        .toast-header {
            background: transparent;
            border-bottom: none;
            color: #4a2c0b; /* Rich brown */
            font-family: 'Playfair Display', serif;
        }

        .toast-error .toast-header {
            color: #ffffff;
        }

        .toast-success .toast-header {
            color: #ffffff;
        }

        .toast-body {
            color: #4a2c0b;
            font-family: 'Lato', sans-serif;
        }

        .toast-error .toast-body {
            color: #ffffff;
        }

        .toast-success .toast-body {
            color: #ffffff;
        }

        /* Candle flicker animation for subtle effect */
        .login-container::before {
            content: '';
            position: absolute;
            top: -10px;
            left: 50%;
            transform: translateX(-50%);
            width: 8px;
            height: 8px;
            background: radial-gradient(circle, rgba(255, 147, 41, 0.8), transparent);
            border-radius: 50%;
            animation: flicker 2s infinite ease-in-out;
            opacity: 0.7;
        }

        @keyframes flicker {
            0%, 100% { opacity: 0.7; transform: translateX(-50%) scale(1); }
            50% { opacity: 1; transform: translateX(-50%) scale(1.2); }
        }

        /* Responsive Design */
        @media (max-width: 576px) {
            .login-container {
                padding: 1.5rem;
                margin: 15px;
            }

            .text-center {
                font-size: 1.8rem;
            }

            .form-control {
                padding: 10px 12px;
            }

            .btn-primary {
                padding: 10px;
            }

            .toast-container {
                top: 10px;
                right: 10px;
            }
        }

        @media (max-width: 400px) {
            .login-container {
                padding: 1rem;
            }

            .text-center {
                font-size: 1.5rem;
            }
        }
    </style>
</head>
<body>
    <div class="login-container">
        <!-- Toast Container -->
        <div class="toast-container">
            <% if (message) { %>
                <div class="toast toast-error" role="alert" aria-live="assertive" aria-atomic="true" data-bs-autohide="true" data-bs-delay="5000">
                    <div class="toast-header">
                        <strong class="me-auto">Error</strong>
                        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast" aria-label="Close"></button>
                    </div>
                    <div class="toast-body">
                        <%= message %>
                    </div>
                </div>
            <% } %>
        </div>

        <h2 class="text-center">Aura Candles Login</h2>
        <form id="userLoginForm">
            <div class="form-group">
                <label for="userEmail">Email Address</label>
                <input
                    type="email"
                    class="form-control"
                    id="userEmail"
                    name="email"
                    required
                    placeholder="Enter your email"
                />
                <div id="emailError" class="error-message"></div>
            </div>
            <div class="form-group">
                <label for="userPassword">Password</label>
                <input
                    type="password"
                    class="form-control"
                    id="userPassword"
                    name="password"
                    required
                    placeholder="Enter your password"
                />
                <div id="passwordError" class="error-message"></div>
            </div>
            <button type="submit" class="btn btn-primary">Log In</button>
        </form>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Function to show toast notifications
        function showToast(message, type = 'error') {
            const toastContainer = document.querySelector('.toast-container');
            const toast = document.createElement('div');
            toast.classList.add('toast', `toast-${type}`);
            toast.setAttribute('role', 'alert');
            toast.setAttribute('aria-live', 'assertive');
            toast.setAttribute('aria-atomic', 'true');
            toast.setAttribute('data-bs-autohide', 'true');
            toast.setAttribute('data-bs-delay', '5000');

            toast.innerHTML = `
                <div class="toast-header">
                    <strong class="me-auto">${type.charAt(0).toUpperCase() + type.slice(1)}</strong>
                    <button type="button" class="btn-close ${type === 'error' ? 'btn-close-white' : ''}" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
                <div class="toast-body">
                    ${message}
                </div>
            `;

            toastContainer.appendChild(toast);
            const bsToast = new bootstrap.Toast(toast);
            bsToast.show();

            // Remove toast from DOM after it hides
            toast.addEventListener('hidden.bs.toast', () => {
                toast.remove();
            });
        }

        // Initialize toasts on page load (for server-side messages)
        document.querySelectorAll('.toast').forEach(toast => {
            const bsToast = new bootstrap.Toast(toast);
            bsToast.show();
            toast.addEventListener('hidden.bs.toast', () => {
                toast.remove();
            });
        });

        document.getElementById("userLoginForm").addEventListener("submit", async function(event) {
            event.preventDefault();

            const email = document.getElementById("userEmail").value.trim();
            const password = document.getElementById("userPassword").value.trim();
            const emailError = document.getElementById("emailError");
            const passwordError = document.getElementById("passwordError");

            // Client-side validation
            let isValid = true;
            const emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,6}$/;

            if (!emailPattern.test(email)) {
                emailError.textContent = "Invalid email format";
                isValid = false;
            } else {
                emailError.textContent = "";
            }

            if (password.length < 8) {
                passwordError.textContent = "Password must be at least 8 characters";
                isValid = false;
            } else {
                passwordError.textContent = "";
            }

            if (!isValid) return;

            const formData = { email, password };

            try {
                const response = await fetch("/admin/login", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify(formData)
                });

                const data = await response.json();

                if (response.ok) {
                    showToast("Login successful! Redirecting...", "success");
                    setTimeout(() => {
                        window.location.href = data.redirectUrl || "/dashboard";
                    }, 2000); // Delay redirect to show toast
                } else {
                    showToast(data.message || "Login failed", "error");
                }
            } catch (error) {
                console.error("Error:", error);
                showToast("Something went wrong. Please try again.", "error");
            }
        });
    </script>
</body>
</html>