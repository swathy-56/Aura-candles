<%- include("../../views/partials/admin/header") %>
<head>
  <style>
    .col-md-3 { padding: 20px; border: 1px solid #ddd; border-radius: 10px; margin: 10px; }
    .form-label { margin-bottom: 8px; }
    .form-control { width: 100%; padding: 8px; margin-bottom: 10px; border: 1px solid #ccc; border-radius: 5px; box-sizing: border-box; }
    .d-grid { margin-top: 20px; }
    .btn-primary { background-color: #007bff; color: #fff; border: 1px solid #007bff; border-radius: 5px; padding: 10px 20px; cursor: pointer; }
    .btn-primary:hover { background-color: #0056b3; border-color: #0056b3; }
    .pagination-container { text-align: center; margin-top: 20px; }
    .pagination { display: inline-block; }
    .pagination a, .pagination .current-page { display: inline-block; padding: 5px 10px; margin: 0 2px; border: 1px solid #ddd; text-decoration: none; color: #333; }
    .pagination a:hover { background-color: #f5f5f5; }
    .pagination .current-page { background-color: #007bff; color: white; border-color: #007bff; }
    .error-message { color: red; display: none; }

    /* Toast Styles */
    .toast-container {
      position: fixed;
      top: 20px;
      right: 20px;
      z-index: 1055;
    }

    .toast {
      background: rgba(255, 245, 230, 0.95); /* Creamy off-white */
      border: 1px solid #e8d7b0;
      border-radius: 8px;
      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
      min-width: 300px;
    }

    .toast-success {
      background: rgba(46, 204, 113, 0.95); /* Soft green for success */
      color: #ffffff;
    }

    .toast-error {
      background: rgba(231, 76, 60, 0.95); /* Soft red for errors */
      color: #ffffff;
    }

    .toast-confirm {
      background: rgba(255, 245, 230, 0.95); /* Creamy off-white for confirmation */
      color: #4a2c0b;
    }

    .toast-header {
      background: transparent;
      border-bottom: none;
      color: #4a2c0b; /* Rich brown */
      font-family: 'Lato', sans-serif;
      font-weight: 500;
    }

    .toast-success .toast-header,
    .toast-error .toast-header {
      color: #ffffff;
    }

    .toast-body {
      color: #4a2c0b;
      font-family: 'Lato', sans-serif;
    }

    .toast-success .toast-body,
    .toast-error .toast-body {
      color: #ffffff;
    }

    .toast-confirm .toast-body {
      display: flex;
      flex-direction: column;
      gap: 10px;
    }

    .toast-confirm .btn {
      padding: 8px 12px;
      border-radius: 5px;
      font-size: 0.9em;
    }

    .toast-confirm .btn-confirm {
      background-color: #d33;
      color: #ffffff;
    }

    .toast-confirm .btn-cancel {
      background-color: #3085d6;
      color: #ffffff;
    }

    /* Responsive Design */
    @media (max-width: 576px) {
      .toast-container {
        top: 10px;
        right: 10px;
        width: calc(100% - 20px);
      }
    }
  </style>
</head>
<body>
  <section class="content-main">
    <div class="content-header">
      <div>
        <h2 class="content-title card-title">Coupons</h2>
      </div>
    </div>
    <!-- Toast Container -->
    <div class="toast-container"></div>
    <div class="card">
      <div class="card-body">
        <div class="row">
          <div class="col-md-3">
            <form method="post" action="/admin/add-coupon" onsubmit="return validateCouponForm(event)">
              <div class="mb-4">
                <label for="coupon_code" class="form-label">Coupon Code</label>
                <input type="text" name="code" placeholder="Type here" class="form-control" id="coupon_code" required/>
                <div id="code-error" class="error-message"></div>
              </div>
              <div class="mb-4">
                <label for="discount" class="form-label">Discount (%)</label>
                <input type="number" name="discountPercentage" min="0" max="100" class="form-control" id="discount" required/>
                <div id="discount-error" class="error-message"></div>
              </div>
              <div class="mb-4">
                <label for="max_discount" class="form-label">Max Discount (₹)</label>
                <input type="number" name="maxDiscount" min="0" class="form-control" id="max_discount" required/>
                <div id="max-discount-error" class="error-message"></div>
              </div>
              <div class="mb-4">
                <label for="min_amount" class="form-label">Minimum Amount</label>
                <input type="number" name="minimumAmount" min="0" class="form-control" id="min_amount" required/>
                <div id="min-amount-error" class="error-message"></div>
              </div>
              <div class="mb-4">
                <label for="expiry" class="form-label">Expiry Date</label>
                <input type="date" name="expiryDate" class="form-control" id="expiry" required/>
                <div id="expiry-error" class="error-message"></div>
              </div>
              <div class="d-grid">
                <button class="btn btn-primary" type="submit">Create Coupon</button>
              </div>
            </form>
          </div>
          <div class="col-md-8 ml-10">
            <div class="table-responsive">
              <table class="table table-hover">
                <thead>
                  <tr>
                    <th>Code</th>
                    <th>Discount</th>
                    <th>Max Discount</th>
                    <th>Min Amount</th>
                    <th>Expiry Date</th>
                    <th>Status</th>
                    <th>Action</th>
                  </tr>
                </thead>
                <tbody>
                  <%
                    const currentPage = parseInt(typeof page !== 'undefined' ? page : 1);
                    const itemsPerPage = 5;
                    const startIndex = (currentPage - 1) * itemsPerPage;
                    const endIndex = startIndex + itemsPerPage;
                    const paginatedCoupons = coupons.slice().reverse().slice(startIndex, endIndex);
                    const totalPages = Math.ceil(coupons.length / itemsPerPage);
                  %>
                  <% paginatedCoupons.forEach((coupon) => { %>
                  <tr>
                    <td><%= coupon.code %></td>
                    <td><%= coupon.discountPercentage %>%</td>
                    <td>₹<%= coupon.maxDiscount %></td>
                    <td>₹<%= coupon.minimumAmount %></td>
                    <td><%= coupon.expiryDate.toDateString() %></td>
                    <td>
                      <% if(coupon.isActive) { %>
                        <span class="badge rounded-pill alert-success">Active</span>
                      <% } else { %>
                        <span class="badge rounded-pill alert-danger">Inactive</span>
                      <% } %>
                    </td>
                    <td>
                      <button class="btn btn-danger" onclick="showDeleteConfirmToast('<%= coupon._id %>')">Delete</button>
                    </td>
                  </tr>
                  <% }) %>
                </tbody>
              </table>
              <div class="pagination-container">
                <div class="pagination">
                  <% if (currentPage > 1) { %>
                    <a href="?page=<%= currentPage - 1 %>">« Prev</a>
                  <% } %>
                  <% for (let i = 1; i <= totalPages; i++) { %>
                    <% if (i === currentPage) { %>
                      <span class="current-page"><%= i %></span>
                    <% } else { %>
                      <a href="?page=<%= i %>"><%= i %></a>
                    <% } %>
                  <% } %>
                  <% if (currentPage < totalPages) { %>
                    <a href="?page=<%= currentPage + 1 %>">Next »</a>
                  <% } %>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>

  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    // Function to show toast notifications
    function showToast(message, type = 'error') {
      const toastContainer = document.querySelector('.toast-container');
      const toast = document.createElement('div');
      toast.classList.add('toast', `toast-${type}`);
      toast.setAttribute('role', 'alert');
      toast.setAttribute('aria-live', 'assertive');
      toast.setAttribute('aria-atomic', 'true');
      toast.setAttribute('data-bs-autohide', 'true');
      toast.setAttribute('data-bs-delay', '5000');

      toast.innerHTML = `
        <div class="toast-header">
          <strong class="me-auto">${type.charAt(0).toUpperCase() + type.slice(1)}</strong>
          <button type="button" class="btn-close ${type === 'success' || type === 'error' ? 'btn-close-white' : ''}" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body">
          ${message}
        </div>
      `;

      toastContainer.appendChild(toast);
      const bsToast = new bootstrap.Toast(toast);
      bsToast.show();
      toast.addEventListener('hidden.bs.toast', () => {
        toast.remove();
      });
    }

    // Function to show confirmation toast for delete
    function showDeleteConfirmToast(couponId) {
      const toastContainer = document.querySelector('.toast-container');
      const toast = document.createElement('div');
      toast.classList.add('toast', 'toast-confirm');
      toast.setAttribute('role', 'alert');
      toast.setAttribute('aria-live', 'assertive');
      toast.setAttribute('aria-atomic', 'true');
      toast.setAttribute('data-bs-autohide', 'false');

      toast.innerHTML = `
        <div class="toast-header">
          <strong class="me-auto">Confirm Delete</strong>
          <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body">
          <p>You won't be able to revert this!</p>
          <div class="d-flex justify-content-end gap-2">
            <button class="btn btn-confirm" onclick="deleteCoupon('${couponId}')">Yes, delete it!</button>
            <button class="btn btn-cancel" data-bs-dismiss="toast">Cancel</button>
          </div>
        </div>
      `;

      toastContainer.appendChild(toast);
      const bsToast = new bootstrap.Toast(toast);
      bsToast.show();
      toast.addEventListener('hidden.bs.toast', () => {
        toast.remove();
      });
    }

    function validateCouponForm(event) {
      event.preventDefault();
      clearErrorMessages();
      
      const code = document.getElementById('coupon_code').value.trim();
      const discount = document.getElementById('discount').value;
      const maxDiscount = document.getElementById('max_discount').value;
      const minAmount = document.getElementById('min_amount').value;
      const expiry = document.getElementById('expiry').value;
      let isValid = true;

      if (!code) {
        showToast('Please enter a coupon code', 'error');
        isValid = false;
      }
      if (!discount || discount < 0 || discount > 100) {
        showToast('Discount must be between 0 and 100', 'error');
        isValid = false;
      }
      if (!maxDiscount || maxDiscount < 0) {
        showToast('Max discount must be a positive number', 'error');
        isValid = false;
      }
      if (!minAmount || minAmount < 0) {
        showToast('Minimum amount must be positive', 'error');
        isValid = false;
      }
      if (!expiry || new Date(expiry) < new Date()) {
        showToast('Please select a future date', 'error');
        isValid = false;
      }

      if (isValid) {
        fetch('/admin/add-coupon', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ code, discountPercentage: discount, maxDiscount: maxDiscount, minimumAmount: minAmount, expiryDate: expiry })
        })
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            showToast('Coupon added successfully', 'success');
            setTimeout(() => location.reload(), 2000);
          } else {
            showToast(data.message || 'Error adding coupon', 'error');
          }
        })
        .catch(error => {
          console.error('Error adding coupon:', error);
          showToast('Something went wrong. Please try again.', 'error');
        });
      }
      return false;
    }

    function deleteCoupon(couponId) {
      fetch('/admin/delete-coupon', {
        method: 'DELETE',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ couponId })
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          showToast('Coupon deleted successfully', 'success');
          setTimeout(() => location.reload(), 2000);
        } else {
          showToast(data.message || 'Error deleting coupon', 'error');
        }
      })
      .catch(error => {
        console.error('Error deleting coupon:', error);
        showToast('Something went wrong. Please try again.', 'error');
      });
    }

    function displayErrorMessage(elementId, message) {
      document.getElementById(elementId).innerText = message;
      document.getElementById(elementId).style.display = 'block';
    }

    function clearErrorMessages() {
      document.querySelectorAll('.error-message').forEach(element => {
        element.innerText = '';
        element.style.display = 'none';
      });
    }
  </script>
<%- include("../../views/partials/admin/footer") %>