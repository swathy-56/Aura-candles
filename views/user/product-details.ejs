<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Product Details</title>

    <!-- jQuery (Single Inclusion) -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <!-- Fancybox for Image Gallery -->
    <script src="https://cdn.jsdelivr.net/npm/@fancyapps/ui@4.0.0/dist/fancybox.umd.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@fancyapps/ui@4.0.0/dist/fancybox.css"/>

    <!-- SweetAlert2 for Notifications -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <%- include('../partials/user/header') %>

    <style>
        /* General Styles */
        body {
            background-color: #f4f4f4;
            color: #333;
            font-family: 'Arial', sans-serif;
            margin: 0;
            padding: 20px;
        }

        .container {
            max-width: 1200px;
            margin: auto;
            padding: 20px;
        }

        /* Breadcrumbs */
        .breadcrumbs {
            color: #333;
            font-size: 14px;
            margin-bottom: 15px;
        }
        .breadcrumbs a {
            color: #000;
            text-decoration: none;
        }

        /* Product Details */
        .product-details {
            display: flex;
            gap: 20px;
            background: #fff;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        .product-image {
            position: relative;
            display: flex;
            align-items: flex-start;
        }

        .zoom-container {
            position: relative;
            width: 400px;
            height: 400px;
        }

        #zoomImage {
            width: 100%;
            height: 100%;
            border-radius: 8px;
            cursor: crosshair;
        }

        .zoom-lens {
            position: absolute;
            border: 1px solid #d4d4d4;
            background: rgba(0, 0, 0, 0.1);
            width: 100px;
            height: 100px;
            pointer-events: none;
            display: none;
        }

        .zoom-window {
            position: absolute;
            left: 420px;
            top: 0;
            width: 400px;
            height: 400px;
            border: 1px solid #d4d4d4;
            background-repeat: no-repeat;
            display: none;
            overflow: hidden;
        }

        .product-info h1 {
            color: #000;
            font-size: 24px;
        }

        .product-info p {
            color: #555;
        }

        .price {
            font-size: 20px;
            font-weight: bold;
            color: #ff4d00;
        }

        .discount {
            font-size: 14px;
            color: #ffcc00;
        }

        .stock {
            font-size: 16px;
            font-weight: bold;
            color: #000;
        }

        .rating {
            color: #ffcc00;
            font-size: 18px;
        }

        /* Buttons */
        .btn {
            background-color: #000;
            color: #fff;
            padding: 10px 20px;
            border: none;
            cursor: pointer;
            margin-top: 10px;
            border-radius: 5px;
            font-size: 16px;
        }

        .btn:hover {
            background-color: #333;
        }

        /* Thumbnails */
        .image-thumbnails {
            display: flex;
            flex-wrap: wrap;
            gap: 5px;
            margin-top: 10px;
        }

        .image-thumbnails img {
            width: 100px;
            height: 100px;
            border-radius: 5px;
            cursor: pointer;
            border: 2px solid transparent;
        }

        .image-thumbnails img:hover {
            border-color: #ff4d00;
        }

        /* Related Products - Horizontal Layout */
        .related-products-list {
            display: flex;
            gap: 20px;
            margin-top: 10px;
            flex-wrap: wrap;
        }

        .related-product {
            background: #fff;
            padding: 10px;
            border-radius: 8px;
            text-align: center;
            width: 200px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        .related-product img {
            width: 100%;
            height: 150px;
            object-fit: cover;
            border-radius: 5px;
            margin-bottom: 10px;
        }

        .related-product h4 {
            font-size: 14px;
            color: #000;
            margin: 5px 0;
        }

        .related-product p {
            font-size: 14px;
            color: #555;
            margin: 0;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="breadcrumbs">
            <a href="/">Home</a> >
            <a href="/shop">Shop</a> >
            <a href="/productDetails/<%= product._id %>"><%= product.productName %></a> >
            <span><%= product.productName %></span>
        </div>

        <div class="product-details">
            <div class="product-image">
                <div class="zoom-container">
                    <img id="zoomImage"
                         src="/uploads/re-image/<%= product.productImage[0] %>"
                         alt="<%= product.productName %>">
                    <div class="zoom-lens"></div>
                    <div class="zoom-window"></div>
                </div>

                <div class="image-thumbnails">
                    <% product.productImage.forEach(image => { %>
                        <a href="/uploads/re-image/<%= image %>" data-fancybox="gallery">
                            <img src="/uploads/re-image/<%= image %>"
                                 data-fullsize="/uploads/re-image/<%= image %>">
                        </a>
                    <% }) %>
                </div>
            </div>

            <div class="product-info">
                <h1><%= product.productName %></h1>
                <p><%= product.description %></p>
                <p><strong>Brand:</strong> <%= product.brand %></p>
                <p><strong>Category:</strong> <%= product.category.name %></p>
                <p class="price">Price: ₹ <%= product.finalPrice%>
                    <% if (product.regularPrice > product.finalPrice) { %>
                        <span class="discount">(Save <%= ((product.regularPrice - product.finalPrice) / product.regularPrice * 100).toFixed(1) %>%)</span>
                    <% } %>
                </p>
                <p class="stock-status">
                    <% if (product.quantity > 0) { %>
                        <span style="color: green;">In Stock (<%= product.quantity %> left)</span>
                    <% } else { %>
                        <span style="color: red;">Out of Stock</span>
                    <% } %>
                </p>
                <% if (product.quantity > 0) { %>
                    <button class="btn add-cart" data-id="<%= product._id %>" data-quantity="1" data-price="<%= product.regularPrice %>">+ Add To Cart</button>
                <% } else { %>
                    <button class="btn" disabled>Out of Stock</button>
                <% } %>
                <button class="btn add-wishlist" data-id="<%= product._id %>">Add to Wishlist</button>
                <p class="rating">⭐⭐⭐⭐☆ (4.5 / 5)</p>
            </div>
        </div>

        <div class="related-products">
            <h3>Related Products</h3>
            <div class="related-products-list">
                <% relatedProducts.forEach((related) => { %>
                    <div class="related-product">
                        <a href="/productDetails?id=<%= related._id %>">
                            <img src="/uploads/re-image/<%= related.productImage[0] %>"
                                 alt="<%= related.productName %>">
                            <h4><%= related.productName %></h4>
                            <p>₹ <%= related.regularPrice %></p>
                        </a>
                    </div>
                <% }); %>
            </div>
        </div>
    </div>

    <script>
        $(document).ready(function () {
            // Custom Zoom Implementation
            const zoomImage = document.getElementById('zoomImage');
            const zoomLens = document.querySelector('.zoom-lens');
            const zoomWindow = document.querySelector('.zoom-window');
            const zoomContainer = document.querySelector('.zoom-container');

            let magnification = 2; // Magnification level
            let lensWidth = 100;
            let lensHeight = 100;

            function initializeZoom(imageSrc) {
                zoomWindow.style.backgroundImage = `url(${imageSrc})`;
                zoomWindow.style.backgroundSize = `${zoomImage.width * magnification}px ${zoomImage.height * magnification}px`;
            }

            // Initialize zoom with the first image
            zoomImage.onload = function () {
                initializeZoom(zoomImage.src);
            };

            zoomContainer.addEventListener('mouseenter', function () {
                zoomLens.style.display = 'block';
                zoomWindow.style.display = 'block';
            });

            zoomContainer.addEventListener('mouseleave', function () {
                zoomLens.style.display = 'none';
                zoomWindow.style.display = 'none';
            });

            zoomContainer.addEventListener('mousemove', function (e) {
                // Get the bounding rectangle of the image
                const rect = zoomImage.getBoundingClientRect();
                let x = e.clientX - rect.left;
                let y = e.clientY - rect.top;

                // Calculate lens position
                x = x - lensWidth / 2;
                y = y - lensHeight / 2;

                // Constrain lens within image bounds
                if (x < 0) x = 0;
                if (y < 0) y = 0;
                if (x > zoomImage.width - lensWidth) x = zoomImage.width - lensWidth;
                if (y > zoomImage.height - lensHeight) y = zoomImage.height - lensHeight;

                zoomLens.style.left = `${x}px`;
                zoomLens.style.top = `${y}px`;

                // Calculate the background position for the zoom window
                const bgX = -x * magnification;
                const bgY = -y * magnification;
                zoomWindow.style.backgroundPosition = `${bgX}px ${bgY}px`;
            });

            // Update Zoom Image when thumbnail is clicked
            $('.image-thumbnails a').on('click', function (e) {
                e.preventDefault();
                const newImage = $(this).find('img').data('fullsize');
                $('#zoomImage').attr('src', newImage);
                initializeZoom(newImage);
            });

            // Add to Cart Functionality
            $('.add-cart').on('click', function (event) {
                event.preventDefault();
                const productId = $(this).data('id');
                const quantity = $(this).data('quantity');

                $.ajax({
                    url: '/addToCart',
                    method: 'POST',
                    data: JSON.stringify({ productId, quantity }),
                    contentType: 'application/json',
                    success: function (response) {
                        if (response.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Added to Cart',
                                text: response.message || 'Product added successfully!',
                                confirmButtonText: 'OK'
                            }).then(() => {
                                Swal.fire({
                                    title: 'Go to cart?',
                                    text: 'Do you want to go to cart?',
                                    showCancelButton: true,
                                    confirmButtonText: 'YES',
                                    cancelButtonText: 'NO'
                                }).then((confirmation) => {
                                    if (confirmation.isConfirmed) {
                                        window.location.href = '/cart';
                                    }
                                });
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: response.message || 'Failed to add to cart.',
                                confirmButtonText: 'OK'
                            });
                        }
                    },
                    error: function (xhr) {
                        const errorMessage = xhr.responseJSON?.message || 'Error while adding to cart. Please try again!';
                        if (xhr.status === 401) {
                            Swal.fire({
                                icon: 'warning',
                                title: 'Login Required',
                                text: 'Please log in to add items to your cart.',
                                confirmButtonText: 'Login'
                            }).then(() => {
                                window.location.href = '/login';
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: errorMessage,
                                confirmButtonText: 'OK'
                            });
                        }
                        console.error('Add to Cart Error:', xhr.responseText);
                    }
                });
            });

            // Add to Wishlist Functionality
            $('.add-wishlist').on('click', function (event) {
                event.preventDefault();
                const productId = $(this).data('id');

                $.ajax({
                    url: '/addToWishlist',
                    method: 'POST',
                    data: JSON.stringify({ productId }),
                    contentType: 'application/json',
                    success: function (response) {
                        if (response.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Added to Wishlist',
                                text: response.message || 'Product added to wishlist successfully!',
                                confirmButtonText: 'OK'
                            }).then(() => {
                                Swal.fire({
                                    title: 'Go to wishlist?',
                                    text: 'Do you want to view your wishlist?',
                                    showCancelButton: true,
                                    confirmButtonText: 'YES',
                                    cancelButtonText: 'NO'
                                }).then((confirmation) => {
                                    if (confirmation.isConfirmed) {
                                        window.location.href = '/wishlist';
                                    }
                                });
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: response.message || 'Failed to add to wishlist.',
                                confirmButtonText: 'OK'
                            });
                        }
                    },
                    error: function (xhr) {
                        const errorMessage = xhr.responseJSON?.message || 'Error while adding to wishlist. Please try again!';
                        if (xhr.status === 401) {
                            Swal.fire({
                                icon: 'warning',
                                title: 'Login Required',
                                text: 'Please log in to add items to your wishlist.',
                                confirmButtonText: 'Login'
                            }).then(() => {
                                window.location.href = '/login';
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: errorMessage,
                                confirmButtonText: 'OK'
                            });
                        }
                        console.error('Add to Wishlist Error:', xhr.responseText);
                    }
                });
            });
        });
    </script>

    <%- include('../../views/partials/user/footer') %>
</body>
</html>