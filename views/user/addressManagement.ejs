<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Address Management</title>
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
    />
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
      body {
        font-family: "Arial", sans-serif;
        background-color: #f8f9fa;
      }
      .sidebar {
        height: 100vh;
        width: 250px;
        position: fixed;
        background: #343a40;
        padding-top: 20px;
      }
      .sidebar a {
        padding: 15px;
        text-decoration: none;
        font-size: 18px;
        color: white;
        display: block;
      }
      .sidebar a:hover {
        background: #495057;
      }
      .main-content {
        margin-left: 250px;
        padding: 20px;
      }
      .container-fluid {
        padding: 0 15px;
      }
      .card {
        margin-bottom: 20px;
        border: 1px solid #dee2e6;
      }
      .card-header {
        background-color: #ffffff;
        border-bottom: 1px solid #dee2e6;
      }
      .default-address {
        border-left: 4px solid #007bff;
        background-color: #f8f9fa;
      }
      .btn {
        margin: 0 5px;
      }
      /* Validation styles */
      .invalid-feedback {
        display: none;
      }
      .was-validated .form-control:invalid ~ .invalid-feedback,
      .form-control.is-invalid ~ .invalid-feedback {
        display: block;
      }
    </style>
  </head>
  <body>
    <div class="d-flex">
      <!-- Sidebar (Unchanged) -->
      <div class="sidebar">
        <h4 class="text-center text-white">User Dashboard</h4>
        <a href="/account">Profile</a>
        <a href="/address-management">Address</a>
        <a href="/orders">Orders</a>
        <a href="/cart">Cart</a>
        <a href="/wallet">Wallet</a>
        <a href="/wishlist">Wishlist</a>
      </div>

      <!-- Main Content (Unchanged) -->
      <div class="main-content">
        <div class="container-fluid">
          <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
              <li class="breadcrumb-item"><a href="/">Home</a></li>
              <li class="breadcrumb-item active" aria-current="page">
                Address
              </li>
            </ol>
          </nav>

          <div class="row">
            <div class="col-12">
              <h2 class="mb-4">Address Management</h2>
              <button class="btn btn-success mb-4" onclick="openAddressModal()">
                Add New Address
              </button>
            </div>
          </div>

          <!-- Saved Addresses (Unchanged) -->
          <div class="row">
            <div class="col-12">
              <h4 class="mb-3">Saved Addresses</h4>
              <% if (user.addresses.length === 0) { %>
              <div class="alert alert-warning">
                No saved addresses found. Add a new address.
              </div>
              <% } else { %> <% user.addresses.forEach(address => { %>
              <div
                class="card <%= user.shippingAddress === address._id ? 'default-address' : '' %>"
              >
                <div class="card-body">
                  <h5 class="card-title"><%= address.name %></h5>
                  <p class="card-text">
                    Phone: <%= address.phone %><br />
                    Landmark: <%= address.landMark %><br />
                    City: <%= address.city %><br />
                    State: <%= address.state %><br />
                    Pincode: <%= address.pincode %>
                  </p>
                  <% if (user.shippingAddress && user.shippingAddress.toString()
                  === address._id.toString()) { %>
                  <span class="badge bg-primary">Default Shipping Address</span>
                  <% } else { %>
                  <form
                    action="/set-default-address/<%= address._id %>"
                    method="POST"
                    class="d-inline"
                  >
                    <button type="submit" class="btn btn-primary btn-sm">
                      Set as Default
                    </button>
                  </form>
                  <% } %>
                  <button
                    class="btn btn-warning btn-sm"
                    onclick="openAddressModal('<%= address._id %>', '<%= address.name %>', '<%= address.phone %>', '<%= address.altPhone %>', '<%= address.city %>', '<%= address.landMark %>', '<%= address.state %>', '<%= address.pincode %>')"
                  >
                    Edit
                  </button>
                  <form
                    action="/delete-address/<%= address._id %>"
                    method="POST"
                    id="deleteForm_<%= address._id %>"
                    class="d-inline"
                  >
                    <input type="hidden" name="_method" value="DELETE" />
                    <button
                      type="button"
                      class="btn btn-danger btn-sm"
                      onclick="confirmDelete('<%= address._id %>')"
                    >
                      Delete
                    </button>
                  </form>
                </div>
              </div>
              <% }); %> <% } %>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Address Modal -->
    <div
      class="modal fade"
      id="addressModal"
      tabindex="-1"
      aria-labelledby="addressModalLabel"
      aria-hidden="true"
    >
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="addressModalLabel">Add/Edit Address</h5>
            <button
              type="button"
              class="btn-close"
              data-bs-dismiss="modal"
              aria-label="Close"
            ></button>
          </div>
          <div class="modal-body">
            <form id="addressForm" method="POST" novalidate>
              <input type="hidden" id="method" name="_method" value="PATCH" />
              <input type="hidden" id="addressId" name="addressId" />
              <div class="mb-3">
                <label class="form-label">Full Name</label>
                <input
                  type="text"
                  class="form-control"
                  id="name"
                  name="name"
                  required
                />
                <div class="invalid-feedback" id="nameError">
                  Please enter a valid full name (letters and spaces only, no
                  numbers or special characters).
                </div>
              </div>
              <div class="mb-3">
                <label class="form-label">Phone Number</label>
                <input
                  type="tel"
                  class="form-control"
                  id="phone"
                  name="phone"
                  required
                  maxlength="10"
                />
                <div class="invalid-feedback" id="phoneError">
                  Please enter a valid 10-digit phone number (first digit cannot
                  be 0, and remaining digits cannot all be 0).
                </div>
              </div>
              <div class="mb-3">
                <label class="form-label">Alternate Phone (Optional)</label>
                <input
                  type="tel"
                  class="form-control"
                  id="altPhone"
                  name="altPhone"
                  maxlength="10"
                />
                <div class="invalid-feedback" id="altPhoneError">
                  Alternate phone must be a valid 10-digit number if provided
                  (first digit cannot be 0, and remaining digits cannot all be
                  0).
                </div>
              </div>
              <div class="mb-3">
                <label class="form-label">City</label>
                <input
                  type="text"
                  class="form-control"
                  id="city"
                  name="city"
                  required
                />
                <div class="invalid-feedback" id="cityError">
                  Please enter a valid city (letters and spaces only, no numbers
                  or special characters).
                </div>
              </div>
              <div class="mb-3">
                <label class="form-label">Landmark</label>
                <input
                  type="text"
                  class="form-control"
                  id="landMark"
                  name="landMark"
                  required
                />
                <div class="invalid-feedback" id="landMarkError">
                  Please enter a valid landmark (letters and spaces only, no
                  numbers or special characters).
                </div>
              </div>
              <div class="mb-3">
                <label class="form-label">State</label>
                <input
                  type="text"
                  class="form-control"
                  id="state"
                  name="state"
                  required
                />
                <div class="invalid-feedback" id="stateError">
                  Please enter a valid state (letters and spaces only, no
                  numbers or special characters).
                </div>
              </div>
              <div class="mb-3">
                <label class="form-label">Pincode</label>
                <input
                  type="number"
                  class="form-control"
                  id="pincode"
                  name="pincode"
                  required
                  maxlength="6"
                />
                <div class="invalid-feedback" id="pincodeError">
                  Please enter a valid 6-digit pincode (cannot be all zeros, and
                  if first digit is non-zero, remaining digits cannot all be 0).
                </div>
              </div>
              <div class="mb-3">
                <label class="form-check-label">
                  <input
                    type="checkbox"
                    class="form-check-input"
                    id="isShippingAddress"
                    name="isShippingAddress"
                  />
                  Set as Shipping Address
                </label>
              </div>
              <button type="submit" class="btn btn-primary w-100">
                Save Address
              </button>
            </form>
          </div>
        </div>
      </div>
    </div>

    <script>
      function openAddressModal(
        id = "",
        name = "",
        phone = "",
        altPhone = "",
        city = "",
        landMark = "",
        state = "",
        pincode = ""
      ) {
        document.getElementById("addressId").value = id;
        document.getElementById("name").value = name;
        document.getElementById("phone").value = phone;
        document.getElementById("altPhone").value = altPhone;
        document.getElementById("city").value = city;
        document.getElementById("landMark").value = landMark;
        document.getElementById("state").value = state;
        document.getElementById("pincode").value = pincode;

        if (id) {
          document.getElementById("addressForm").action = `/edit-address/${id}`;
          document.getElementById("method").value = "PATCH";
        } else {
          document.getElementById("addressForm").action = "/add-address";
          document.getElementById("method").value = "POST";
        }

        // Reset validation states
        const form = document.getElementById("addressForm");
        form.classList.remove("was-validated");
        form.querySelectorAll(".form-control").forEach((input) => {
          input.classList.remove("is-invalid");
        });

        new bootstrap.Modal(document.getElementById("addressModal")).show();
      }

      function confirmDelete(addressId) {
        Swal.fire({
          title: "Are you sure?",
          text: "Do you really want to delete this address?",
          icon: "warning",
          showCancelButton: true,
          confirmButtonColor: "#d33",
          cancelButtonColor: "#3085d6",
          confirmButtonText: "Yes, delete it!",
        }).then((result) => {
          if (result.isConfirmed) {
            document.getElementById(`deleteForm_${addressId}`).submit();
          }
        });
      }

      // Form validation
      document
        .getElementById("addressForm")
        .addEventListener("submit", function (event) {
          event.preventDefault();
          event.stopPropagation();

          const form = this;
          let isValid = true;

          // Reset validation states
          form.querySelectorAll(".form-control").forEach((input) => {
            input.classList.remove("is-invalid");
          });

          // Regex for letters and spaces only (no numbers or special characters)
          const lettersAndSpacesRegex = /^[A-Za-z\s]+$/;

          // Function to check if a string contains only spaces
          const isOnlySpaces = (str) => /^\s*$/.test(str);

          // Validate Full Name
          const name = document.getElementById("name").value.trim();
          if (!name || isOnlySpaces(name)) {
            document.getElementById("name").classList.add("is-invalid");
            document.getElementById("nameError").textContent =
              "Please enter your full name (cannot be only spaces).";
            isValid = false;
          } else if (!lettersAndSpacesRegex.test(name)) {
            document.getElementById("name").classList.add("is-invalid");
            document.getElementById("nameError").textContent =
              "Full name must contain only letters and spaces (no numbers or special characters).";
            isValid = false;
          }

          // Validate Phone Number
          const phone = document.getElementById("phone").value.trim();
          const phoneRegex = /^[1-9][0-9]{9}$/;
          const phoneInvalidZeros = /^[1-9]0{9}$/;
          if (!phoneRegex.test(phone) || phoneInvalidZeros.test(phone)) {
            document.getElementById("phone").classList.add("is-invalid");
            document.getElementById("phoneError").textContent =
              phone.length !== 10
                ? "Phone number must be exactly 10 digits."
                : phone.startsWith("0")
                ? "Phone number cannot start with 0."
                : "Remaining 9 digits cannot all be 0.";
            isValid = false;
          }

          // Validate Alternate Phone (if provided)
          const altPhone = document.getElementById("altPhone").value.trim();
          if (altPhone) {
            const altPhoneRegex = /^[1-9][0-9]{9}$/;
            const altPhoneInvalidZeros = /^[1-9]0{9}$/;
            if (
              !altPhoneRegex.test(altPhone) ||
              altPhoneInvalidZeros.test(altPhone)
            ) {
              document.getElementById("altPhone").classList.add("is-invalid");
              document.getElementById("altPhoneError").textContent =
                altPhone.length !== 10
                  ? "Alternate phone must be exactly 10 digits."
                  : altPhone.startsWith("0")
                  ? "Alternate phone cannot start with 0."
                  : "Remaining 9 digits cannot all be 0.";
              isValid = false;
            }
          }

          // Validate City
          const city = document.getElementById("city").value.trim();
          if (!city || isOnlySpaces(city)) {
            document.getElementById("city").classList.add("is-invalid");
            document.getElementById("cityError").textContent =
              "Please enter your city (cannot be only spaces).";
            isValid = false;
          } else if (!lettersAndSpacesRegex.test(city)) {
            document.getElementById("city").classList.add("is-invalid");
            document.getElementById("cityError").textContent =
              "City must contain only letters and spaces (no numbers or special characters).";
            isValid = false;
          }

          // Validate Landmark
          const landMark = document.getElementById("landMark").value.trim();
          if (!landMark || isOnlySpaces(landMark)) {
            document.getElementById("landMark").classList.add("is-invalid");
            document.getElementById("landMarkError").textContent =
              "Please enter a landmark (cannot be only spaces).";
            isValid = false;
          } else if (!lettersAndSpacesRegex.test(landMark)) {
            document.getElementById("landMark").classList.add("is-invalid");
            document.getElementById("landMarkError").textContent =
              "Landmark must contain only letters and spaces (no numbers or special characters).";
            isValid = false;
          }

          // Validate State
          const state = document.getElementById("state").value.trim();
          if (!state || isOnlySpaces(state)) {
            document.getElementById("state").classList.add("is-invalid");
            document.getElementById("stateError").textContent =
              "Please enter your state (cannot be only spaces).";
            isValid = false;
          } else if (!lettersAndSpacesRegex.test(state)) {
            document.getElementById("state").classList.add("is-invalid");
            document.getElementById("stateError").textContent =
              "State must contain only letters and spaces (no numbers or special characters).";
            isValid = false;
          }

          // Validate Pincode
          const pincode = document.getElementById("pincode").value.trim();
          const pincodeRegex = /^[1-9][0-9]{5}$/;
          const pincodeInvalidZeros = /^[1-9]0{5}$/;
          if (
            !pincodeRegex.test(pincode) ||
            pincodeInvalidZeros.test(pincode)
          ) {
            document.getElementById("pincode").classList.add("is-invalid");
            document.getElementById("pincodeError").textContent =
              pincode.length !== 6
                ? "Pincode must be exactly 6 digits."
                : pincode.startsWith("0")
                ? "Pincode cannot start with 0."
                : "Remaining 5 digits cannot all be 0.";
            isValid = false;
          }

          // If all validations pass, submit the form
          if (isValid) {
            form.submit();
          } else {
            form.classList.add("was-validated");
          }
        });
    </script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  </body>
</html>
